---
# Static IP config
dhcp_config_interface: eno1
dhcp_config_static_ip: 192.168.0.201
dhcp_config_router_ip: 192.168.0.1
dhcp_config_dns_ip: 192.168.0.200

# Passwordless privileged users with ssh access with defined keys to be created
ssh_users:
  - user: "{{ master_user.username }}"
    key: "{{ master_user.key }}"

# Packages to be installed during setup
packages_update: yes # Update packages each time
setup_packages:
  - vim
  - git
  - htop
  - curl
  - zip
  - tmux
  - hddtemp
  - smartmontools
  - python3
  - python3-pip

# awesome-motd
motd_files:
  - src: 10-hostname-color
    name: 10-hostname-color
  - src: 20-sysinfo
    name: 20-sysinfo
  - src: 35-diskspace
    name: 35-diskspace
  - src: epsilon/40-services
    name: 40-services
  - src: 60-docker
    name: 60-docker

# geerlingguy.docker
docker_edition: 'ce'
docker_service_state: started
docker_service_enabled: true
docker_install_compose: true
docker_compose_version: "1.26.2"
docker_users:
  - "{{ master_user.username }}"

# Disks setup
data_disks:
  - path: /mnt/disk1
    id: '/dev/disk/by-id/ata-WDC_WD101EFAX-68LDBN0_VCG71VVN'
    fs: ext4
    opts: defaults
  - path: /mnt/disk2
    id: '/dev/disk/by-id/ata-HGST_HTS721010A9E630_JR10006P2SAG3F'
    fs: ext4
    opts: defaults

mergerfs_mounts:
  - src: "/mnt/disk*"
    dest: "/mnt/storage"
    fs: fuse.mergerfs
    opts: "defaults,nonempty,allow_other,use_ino,cache.files=off,moveonenospc=true,dropcacheonclose=true,minfreespace=100G,fsname=mergerfs"

# Containers vars
containers_dir: "/home/{{ master_user.username }}/containers"
containers_user: "{{ master_user.username }}"
containers_group: "{{ master_user.username }}"
containers_secrets: "{{ vault_containers }}"
containers_environment:
  ddclient:
    PUID: 1000
    PGID: 1000
    TZ: "{{ master_user.timezone }}"

# Borgmatic backups
backup_log_dir: /var/log/backups
backup_log_verbosity: 1
borgmatic_version: 1.5.12
backup_setup_cron: yes
backup_schedule: "0 * * * *"
borgmatic_configs:
  - name: containers
    location:
      source_dirs:
        - /home/paradox/containers/main
      repositories:
        - "{{ valut_rsync_repo }}:epsilon/containers"
      exclude_patterns:
        - /home/paradox/containers/main/bazarr/cache
        - /home/paradox/containers/main/bitwarden/icon_cache
        - /home/paradox/containers/main/jellyfin/cache
        - /home/paradox/containers/main/jellyfin/.cache
      remote_executable: borg1
      one_fs: true
    storage:
      passphrase: "{{ vault_backups_passphrase }}"
      compression: lz4
      umask: 0077
      ssh_command: ssh -i /home/{{ master_user.username }}/.ssh/id_rsa
    retention:
      keep_hourly: 12
      keep_daily: 5
    consistency:
      check_last: 3
    hooks:
      before_backup:
        - echo "\n Backup started at {now}"
      healthchecks: "{{ vault_backups_hc_containers }}"
  - name: minecraft-server
    location:
      source_dirs:
        - /home/paradox/containers/minecraft-server
      repositories:
        - "{{ valut_rsync_repo }}:epsilon/minecraft-server"
      exclude_patterns:
        - /source/containers/minecraft-server/server_data/logs
        - /source/containers/minecraft-server/server_data/mirage-cache
      remote_executable: borg1
      one_fs: true
    storage:
      passphrase: "{{ vault_backups_passphrase }}"
      ssh_command: ssh -i /home/{{ master_user.username }}/.ssh/id_rsa
    retention:
      keep_hourly: 48
      keep_daily: 7
    consistency:
      check_last: 3
    hooks:
      healthchecks: "{{ vault_backups_hc_minecraft }}"
  - name: nextcloud
    location:
      source_dirs:
        - /mnt/storage/nextcloud
      repositories:
        - "{{ valut_rsync_repo }}:epsilon/nextcloud"
      remote_executable: borg1
    storage:
      passphrase: "{{ vault_backups_passphrase }}"
      ssh_command: ssh -i /home/{{ master_user.username }}/.ssh/id_rsa
    retention:
      keep_hourly: 24
      keep_daily: 5
    consistency:
      check_last: 2
    hooks:
      before_backup:
        - echo "\n Backup started at {now}"
      healthchecks: "{{ vault_backups_hc_nextcloud }}"