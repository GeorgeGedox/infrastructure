---
# Passwordless privileged users with ssh access with defined keys to be created
ssh_users:
  - user: "{{ master_user.username }}"
    key: "{{ master_user.key }}"

# sysctl_props
inotify_max_user_watches: 524288

# Packages to be installed during setup
packages_update: yes
setup_packages:
  - vim
  - git
  - htop
  - curl
  - zip
  - tmux
  - hddtemp
  - smartmontools
  - python3
  - python3-pip

# awesome-motd
motd_files:
  - src: 10-hostname-color
    name: 10-hostname-color
  - src: 20-sysinfo
    name: 20-sysinfo
  - src: 35-diskspace
    name: 35-diskspace
  - src: apollo/40-services
    name: 40-services
  - src: 60-docker
    name: 60-docker

# cloudalchemy.node_exporter
node_exporter_version: 1.2.0
node_exporter_disabled_collectors:
  - nvme

#patrickjahns.promtail
promtail_version: 2.2.1
promtail_system_user: root
promtail_user_additional_groups: ""
promtail_loki_server_url: https://loki.int.georgev.design
promtail_config_scrape_configs:
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          host: apollo
          agent: promtail
          __path__: /var/log/*log
      - targets:
          - localhost
        labels:
          job: backups
          host: apollo
          agent: promtail
          __path__: /var/log/backups/latest.log

# geerlingguy.docker
docker_edition: 'ce'
docker_service_state: started
docker_service_enabled: true
docker_install_compose: true
docker_compose_version: "1.29.0"
docker_users:
  - "{{ master_user.username }}"

# dir-skeleton
skeleton_dirs:
  - path: /home/{{ master_user.username }}/containers
    owner: "{{ master_user.username }}"
    group: "{{ master_user.username }}"
    mode: "750"

# Storage setup
data_disks:
  - path: /mnt/disk1
    id: '/dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi2'
    fs: ext4
    opts: defaults
  - path: /mnt/disk2
    id: '/dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi1'
    fs: ext4
    opts: defaults

mergerfs_mounts:
  - src: "/mnt/disk*"
    dest: "/mnt/storage"
    fs: fuse.mergerfs
    opts: "defaults,nonempty,allow_other,use_ino,cache.files=off,moveonenospc=true,dropcacheonclose=true,minfreespace=100G,fsname=mergerfs"

# Borgmatic backups
backup_log_dir: /var/log/backups
backup_log_verbosity: 2
borgmatic_version: 1.5.15
backup_setup_cron: yes
backup_schedule: "0 */3 * * *"
borgmatic_configs:
  - name: containers
    location:
      source_dirs:
        - /home/{{ master_user.username }}/containers/main
      repositories:
        - "{{ vault_rsync_repo }}:backups/apollo_containers"
      exclude_patterns:
        - /home/{{ master_user.username }}/containers/main/bazarr/cache
        - /home/{{ master_user.username }}/containers/main/jellyfin/cache
        - /home/{{ master_user.username }}/containers/main/jellyfin/.cache
      remote_executable: borg1
      exclude_caches: true
    storage:
      passphrase: "{{ vault_backups_passphrase }}"
      ssh_command: ssh -i /home/{{ master_user.username }}/.ssh/id_rsa
    retention:
      keep_hourly: 24
      keep_daily: 7
    consistency:
      checks:
        - repository
      check_last: 3
    hooks:
      healthchecks: "{{ vault_backup_hc.apollo.docker }}"

  - name: nextcloud
    location:
      source_dirs:
        - /mnt/storage/nextcloud
      repositories:
        - "{{ vault_rsync_repo }}:backups/apollo_nextcloud"
      remote_executable: borg1
      exclude_caches: true
    storage:
      passphrase: "{{ vault_backups_passphrase }}"
      ssh_command: ssh -i /home/{{ master_user.username }}/.ssh/id_rsa
    retention:
      keep_hourly: 12
      keep_daily: 7
    consistency:
      checks:
        - repository
      check_last: 2
    hooks:
      healthchecks: "{{ vault_backup_hc.apollo.nextcloud }}"
