---
# sysctl_props
inotify_max_user_watches: 524288

# Swap settings
swap_file_path: /swap.img
swap_file_state: absent

# Netplan setup
netplan_enabled: true
netplan_config_file: /etc/netplan/99-ansible-config.yaml
netplan_remove_existing: true
netplan_check_install: false
netplan_apply: true
netplan_configuration:
  network:
    version: 2
    ethernets:
      ens18:
        dhcp4: no
        addresses:
          - 192.168.0.203/23
        gateway4: 192.168.0.1
        nameservers:
          addresses: [8.8.8.8, 1.1.1.1]

# Packages to be installed during setup
packages_update: yes
setup_packages:
  - vim
  - git
  - htop
  - curl
  - zip
  - python3
  - python3-pip
  - smartmontools
  - nfs-common

# dotfiles
dotfile_user: "{{ master_user.username }}"

# awesome-motd
motd_files:
  - src: 10-hostname-color
    name: 10-hostname-color
  - src: 20-sysinfo
    name: 20-sysinfo
  - src: 35-diskspace
    name: 35-diskspace
  - src: apollo/40-services
    name: 40-services
  - src: 60-docker
    name: 60-docker

# cloudalchemy.node_exporter
node_exporter_version: 1.2.0
node_exporter_disabled_collectors:
  - nvme

# textfile-collector
textfile_collector_scripts_directory_path: /opt/textfile_collector
textfile_collector_output_directory_path: /var/lib/node_exporter
textfile_collector_cron: "*/5 * * * *"

# patrickjahns.promtail
promtail_version: 2.2.1
promtail_system_user: root
promtail_user_additional_groups: ""
promtail_config_clients:
  - url: https://loki.nomad.local/loki/api/v1/push
    tls_config:
      insecure_skip_verify: true
promtail_config_scrape_configs:
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          host: apollo
          agent: promtail
          __path__: /var/log/*log
      - targets:
          - localhost
        labels:
          job: backups
          host: apollo
          agent: promtail
          __path__: /var/log/backups/latest.log

# geerlingguy.docker
docker_edition: "ce"
docker_service_state: started
docker_service_enabled: true
docker_install_compose: true
docker_users:
  - "{{ master_user.username }}"

# Storage setup
data_disks:
  - path: /mnt/disk1
    id: '/dev/disk/by-id/scsi-SATA_ST8000NE001-2M71_WSD3F54Z'
    fs: ext4
    opts: defaults
  - path: /mnt/disk2
    id: '/dev/disk/by-id/scsi-SATA_TOSHIBA_HDWR11A_6120A0MNFB4G'
    fs: ext4
    opts: defaults
  - path: /mnt/parity1
    id: '/dev/disk/by-id/scsi-SATA_WDC_WD101EFAX-68_VCG71VVN'
    fs: ext4
    opts: defaults

mergerfs_mount:
  src: "/mnt/disk*"
  dest: "/mnt/storage"
  fs: fuse.mergerfs
  opts: "defaults,nonempty,allow_other,use_ino,cache.files=partial,moveonenospc=true,category.create=mfs,dropcacheonclose=true,minfreespace=250G,fsname=mergerfs"

# Snapraid
snapraid_install: true
snapraid_runner: true

snapraid_apt_package_name: snapraid
snapraid_bin_path: /usr/local/bin/snapraid
snapraid_force_install: false

snapraid_runner_healthcheck_io_uuid: "{{ vault_snapraid_hc_uuid }}"

snapraid_content_files:
  - /var/snapraid.content

snapraid_config_excludes:
  - "*.unrecoverable"
  - "/tmp/"
  - "/lost+found/"
  - "*.!sync"
  - ".AppleDouble"
  - "._AppleDouble"
  - ".DS_Store"
  - "._.DS_Store"
  - ".Thumbs.db"
  - ".fseventsd"
  - ".Spotlight-V100"
  - ".TemporaryItems"
  - ".Trashes"
  - ".AppleDB"
  - "/media/downloads/"

snapraid_parity_disks:
  - path: /mnt/parity1
    content: false

snapraid_data_disks:
  - path: /mnt/disk1
    content: true
  - path: /mnt/disk2
    content: true

snapraid_runner_path: /opt/snapraid-runner/snapraid-runner
snapraid_runner_command: "python3 {{ snapraid_runner_bin }} -c {{ snapraid_runner_conf }} {% if snapraid_runner_healthcheck_io_uuid %} | curl -fsS -m 10 --retry 5 -o /dev/null --data-binary '@-' {{ snapraid_healthcheck_io_host }}/{{ snapraid_runner_healthcheck_io_uuid }} > /dev/null {% endif %}"

snapraid_runner_scrub: true
snapraid_scrub_percent: 15
snapraid_scrub_age: 7
snapraid_runner_touch: true
snapraid_runner_delete_threshold: 250

snapraid_runner_cron_jobs:
  - { job: '{{ snapraid_runner_command }}', name: 'snapraid_runner', weekday: '*', hour: '02' }

# dir_skeleton
skeleton_default_owner: "{{ master_user.username }}"
skeleton_default_group: "{{ master_user.username }}"
skeleton_dirs:
  - path: /mnt/storage/media
    recurse: true
  - path: /mnt/storage/media/blackhole
  - path: /mnt/storage/media/downloads/complete
  - path: /mnt/storage/media/downloads/incomplete
  - path: /mnt/storage/media/music
  - path: /mnt/storage/media/podcasts
  - path: /mnt/storage/media/shows
  - path: /mnt/storage/media/anime
  - path: /mnt/storage/media/movies

# Borgmatic backups
backup_log_dir: /var/log/backups
backup_log_verbosity: 2
borgmatic_version: 1.5.15
backup_setup_cron: yes
backup_schedule: "0 */3 * * *"
borgmatic_configs:
  - name: containers
    location:
      source_dirs:
        - /home/{{ master_user.username }}/containers
      repositories:
        - "{{ vault_rsync_repo }}:backups/apollo_containers"
      exclude_patterns:
        - /home/{{ master_user.username }}/containers/bazarr/cache
        - /home/{{ master_user.username }}/containers/jellyfin/cache
        - /home/{{ master_user.username }}/containers/jellyfin/data/transcodes
        - /home/{{ master_user.username }}/containers/jellyfin/.cache
      remote_executable: borg1
      exclude_caches: true
    storage:
      passphrase: "{{ vault_backups_passphrase }}"
    retention:
      keep_hourly: 12
      keep_daily: 7
    consistency:
      checks:
        - repository
        - archives
      check_last: 1
    hooks:
      healthchecks: "{{ vault_backup_hc.apollo.docker }}"
